name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: bun install

      - name: Build core server
        run: |
          cd packages/core
          bun run build
          cd ../..

      - name: Build binaries
        run: |
          mkdir -p bin
          cd packages/tui
          
          # Linux builds
          GOOS=linux GOARCH=amd64 go build -ldflags='-s -w' -o ../../bin/painika-linux-amd64 ./main.go
          GOOS=linux GOARCH=arm64 go build -ldflags='-s -w' -o ../../bin/painika-linux-arm64 ./main.go
          
          # macOS builds
          GOOS=darwin GOARCH=amd64 go build -ldflags='-s -w' -o ../../bin/painika-darwin-amd64 ./main.go
          GOOS=darwin GOARCH=arm64 go build -ldflags='-s -w' -o ../../bin/painika-darwin-arm64 ./main.go
          
          # Windows builds
          GOOS=windows GOARCH=amd64 go build -ldflags='-s -w' -o ../../bin/painika-windows-amd64.exe ./main.go
          
          cd ../..

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/painika-linux-amd64
          asset_name: painika-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/painika-linux-arm64
          asset_name: painika-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload macOS AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/painika-darwin-amd64
          asset_name: painika-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/painika-darwin-arm64
          asset_name: painika-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Windows AMD64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/painika-windows-amd64.exe
          asset_name: painika-windows-amd64.exe
          asset_content_type: application/octet-stream